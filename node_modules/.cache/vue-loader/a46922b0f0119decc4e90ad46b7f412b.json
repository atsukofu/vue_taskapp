{"remainingRequest":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/atsuko/Desktop/vue_taskapp/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/atsuko/Desktop/vue_taskapp/App.vue","mtime":1608298943183},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data(){\n    return{\n      newTaskName: '',\n    }\n  },\n\n  computed: {\n    tasks() {\n      return this.$store.state.tasks\n    },\n  },\n\n  methods: {\n    addTask(){\n      this.$store.commit('addTask', {\n        name: this.newTaskName,\n      })\n      this.newTaskName = ''\n    },\n    toggleTaskStatus(task) {\n      this.$store.commit('toggleTaskStatus', {\n        id: task.id\n      })\n    },\n  }\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":".","sourcesContent":["<template>\n  <div>\n    <h2>タスク一覧</h2>\n    <ul>\n      <li v-for=\"task in tasks\" v-bind:key=\"task.id\">\n        <input type=\"checkbox\" v-bind:checked=\"task.done\">\n        <input type=\"checkbox\" v-bind:checked=\"task.done\" v-on:change=\"toggleTaskStatus(task)\">\n        {{ task.name }}\n      </li>\n    </ul>\n\n    <form v-on:submit.prevent=\"addTask\">\n      <input type=\"text\" v-model=\"newTaskName\" placeholder=\"新しいタスク\">\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  data(){\n    return{\n      newTaskName: '',\n    }\n  },\n\n  computed: {\n    tasks() {\n      return this.$store.state.tasks\n    },\n  },\n\n  methods: {\n    addTask(){\n      this.$store.commit('addTask', {\n        name: this.newTaskName,\n      })\n      this.newTaskName = ''\n    },\n    toggleTaskStatus(task) {\n      this.$store.commit('toggleTaskStatus', {\n        id: task.id\n      })\n    },\n  }\n}\n</script>"]}]}